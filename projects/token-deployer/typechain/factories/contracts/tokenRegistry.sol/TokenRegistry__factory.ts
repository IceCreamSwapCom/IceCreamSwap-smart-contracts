/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenRegistry, TokenRegistryInterface } from "../../../contracts/tokenRegistry.sol/TokenRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_ice",
        type: "address",
      },
      {
        internalType: "contract IIceCreamSwapRouter",
        name: "_dexRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenType",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
    ],
    name: "DeployerRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenType",
        type: "uint256",
      },
    ],
    name: "TokenRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IIceCreamSwapRouter",
        name: "_dexRouter",
        type: "address",
      },
    ],
    name: "changeDexRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
    ],
    name: "changeFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_ice",
        type: "address",
      },
    ],
    name: "changeIceToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dexRouter",
    outputs: [
      {
        internalType: "contract IIceCreamSwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getDeployerTokenType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getTokenCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getTokenType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ice",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
    ],
    name: "isDeployerRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isTokenRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "registerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenType",
        type: "uint256",
      },
    ],
    name: "setTokenDeployer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c28380380610c2883398101604081905261002f916100e2565b6100383361007a565b600180546001600160a01b039485166001600160a01b03199182161790915560038054938516938216939093179092556002805491909316911617905561012f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146100df57600080fd5b50565b6000806000606084860312156100f757600080fd5b8351610102816100ca565b6020850151909350610113816100ca565b6040850151909250610124816100ca565b809150509250925092565b610aea8061013e6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063b3f0067411610066578063b3f00674146102b1578063c78418b9146102d1578063eab9788414610307578063f2fde38b1461031a57600080fd5b8063715018a6146102585780637c08b964146102605780638da5cb5b1461027357806393272baf1461029157600080fd5b80634739f7e5116100d35780634739f7e5146101e457806347eeda97146101f75780634c2a860d1461020a5780635d01250e1461022a57600080fd5b80630758d9241461010557806312145c971461014f57806322fa9e741461016457806326aa101f146101ac575b600080fd5b6003546101259073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61016261015d366004610a2b565b61032d565b005b61019c610172366004610a57565b73ffffffffffffffffffffffffffffffffffffffff16600090815260046020526040902054151590565b6040519015158152602001610146565b61019c6101ba366004610a57565b73ffffffffffffffffffffffffffffffffffffffff16600090815260056020526040902054151590565b6101626101f2366004610a7b565b610470565b610162610205366004610a57565b61057f565b6001546101259073ffffffffffffffffffffffffffffffffffffffff1681565b61024a610238366004610a57565b60046020526000908152604090205481565b604051908152602001610146565b610162610647565b61016261026e366004610a57565b6106d4565b60005473ffffffffffffffffffffffffffffffffffffffff16610125565b61024a61029f366004610a57565b60056020526000908152604090205481565b6002546101259073ffffffffffffffffffffffffffffffffffffffff1681565b6101256102df366004610a57565b60066020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b610162610315366004610a57565b61079c565b610162610328366004610a57565b610864565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b8060000361041d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f746f6b656e54797065203d3d203000000000000000000000000000000000000060448201526064016103aa565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600460205260408082208490555183917f748767b5ea480c812081baf8d3b4a3a9b266c571c5342eeb7523616853ee2e3291a35050565b33600090815260046020526040812054908190036104ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4465706c6f796572206e6f74207265676973746572656400000000000000000060448201526064016103aa565b73ffffffffffffffffffffffffffffffffffffffff8381166000818152600560209081526040808320869055600682529182902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016948716948517905590518481527ff8e444c42a5a7ea760a42d30d8fa8ccd8915208c2fb7dfe353501d7322d2e132910160405180910390a3505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610600576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103aa565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103aa565b6106d26000610994565b565b60005473ffffffffffffffffffffffffffffffffffffffff163314610755576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103aa565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff16331461081d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103aa565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103aa565b73ffffffffffffffffffffffffffffffffffffffff8116610988576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103aa565b61099181610994565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff8116811461099157600080fd5b60008060408385031215610a3e57600080fd5b8235610a4981610a09565b946020939093013593505050565b600060208284031215610a6957600080fd5b8135610a7481610a09565b9392505050565b60008060408385031215610a8e57600080fd5b8235610a9981610a09565b91506020830135610aa981610a09565b80915050925092905056fea264697066735822122056d108e6ce6717ca519fd53fdb2c838086b8a1668494d9965a7a7b60c1a0706e64736f6c63430008110033";

type TokenRegistryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: TokenRegistryConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class TokenRegistry__factory extends ContractFactory {
  constructor(...args: TokenRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ice: string,
    _dexRouter: string,
    _feeReceiver: string,
    overrides?: Overrides & { from?: string }
  ): Promise<TokenRegistry> {
    return super.deploy(_ice, _dexRouter, _feeReceiver, overrides || {}) as Promise<TokenRegistry>;
  }
  override getDeployTransaction(
    _ice: string,
    _dexRouter: string,
    _feeReceiver: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_ice, _dexRouter, _feeReceiver, overrides || {});
  }
  override attach(address: string): TokenRegistry {
    return super.attach(address) as TokenRegistry;
  }
  override connect(signer: Signer): TokenRegistry__factory {
    return super.connect(signer) as TokenRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenRegistryInterface {
    return new utils.Interface(_abi) as TokenRegistryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TokenRegistry {
    return new Contract(address, _abi, signerOrProvider) as TokenRegistry;
  }
}
